#include <Wire.h>
#include <Adafruit_SSD1306.h>

// Define sensor pins
const int groveAirQualityPin = A0;
const int taicidentAirQualityPin = 2;
const int hazardousAirQualityPin = A1;
const int dustSensorPin = 3;
const int buzzerPin = 4;
const int ledPin = 5;

// OLED display dimensions
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64

// Initialize the OLED display
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void setup() {
  // Initialize serial communication
  Serial.begin(9600);
  
  // Initialize sensor pins
  pinMode(groveAirQualityPin, INPUT);
  pinMode(taicidentAirQualityPin, INPUT);
  pinMode(hazardousAirQualityPin, INPUT);
  pinMode(dustSensorPin, INPUT);
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);
  
  // Initialize OLED display
  if (!display.begin(SSD1306_I2C_ADDRESS, SCREEN_WIDTH, SCREEN_HEIGHT)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  display.display();
  delay(2000);
  display.clearDisplay();
}

void loop() {
  // Read sensor values
  int groveAirQuality = analogRead(groveAirQualityPin);
  int hazardousAirQuality = analogRead(hazardousAirQualityPin);
  int dustSensorValue = digitalRead(dustSensorPin);
  
  // Taicident sensor might require a digital read
  int taicidentAirQuality = digitalRead(taicidentAirQualityPin);
  
  // Display values on OLED
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(0, 0);
  display.print("Grove Air Quality: ");
  display.println(groveAirQuality);
  display.print("Hazardous Air Quality: ");
  display.println(hazardousAirQuality);
  display.print("Dust Sensor: ");
  display.println(dustSensorValue);
  display.print("Taicident Air Quality: ");
  display.println(taicidentAirQuality);
  display.display();
  
  // Check air quality thresholds
  if (groveAirQuality > threshold || hazardousAirQuality > threshold || dustSensorValue > threshold || taicidentAirQuality > threshold) {
    digitalWrite(buzzerPin, HIGH);
    digitalWrite(ledPin, HIGH);
  } else {
    digitalWrite(buzzerPin, LOW);
    digitalWrite(ledPin, LOW);
  }
  
  delay(2000); // Adjust delay as needed
}
